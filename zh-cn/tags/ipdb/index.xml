<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ipdb on biubiobiu's Blog</title><link>https://biubiobiu.github.io/zh-cn/tags/ipdb/</link><description>Recent content in ipdb on biubiobiu's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Everything is mine</copyright><lastBuildDate>Wed, 08 Dec 2021 16:00:20 +0800</lastBuildDate><atom:link href="https://biubiobiu.github.io/zh-cn/tags/ipdb/index.xml" rel="self" type="application/rss+xml"/><item><title>ipdb包</title><link>https://biubiobiu.github.io/zh-cn/posts/00035_programming_language/0035_python/0050_sdk_lib/0040_ipdb/</link><pubDate>Wed, 08 Dec 2021 16:00:20 +0800</pubDate><guid>https://biubiobiu.github.io/zh-cn/posts/00035_programming_language/0035_python/0050_sdk_lib/0040_ipdb/</guid><description>一、ipdb 断点调试：
n(next) 下一条语句 s(step into) 进入函数调用的内部 b line_number(break) 给指定的行号位置加断点 c(continue) 给指定的文件（还没执行到的代码）中指定行号位置，打断点 r(return) 一直执行到下一个断点 j line_numver(jump) 可以跳过某段代码，直接执行指定行号所在的代码 cl(clear) 清楚断点，如果没有参数，则清除所有断点 restart 重新启动调试器 l first/second(list) 在ipdb调试环境中，默认只显示当前执行的代码行，以及上下各一行的代码，如果想要看到更多的上下文代码，可以使用该命令 w(where) 调试时可能会忘记自己目前做在的行号，可以使用w打印目前所在的行号位置，以及上下文信息 whatis variable_name 查看变量的类别，感觉有点鸡肋，用type也可以 a(argument) 当处于一个函数内部的时候，可以使用a打印传入函数的所有参数的值 p variable_name(print) 打印表达式的值 q 退出调试，并清楚所有信息</description></item></channel></rss>