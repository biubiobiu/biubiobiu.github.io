<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>request on biubiobiu's Blog</title><link>https://biubiobiu.github.io/zh-cn/tags/request/</link><description>Recent content in request on biubiobiu's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Everything is mine</copyright><lastBuildDate>Wed, 08 Dec 2021 16:00:20 +0800</lastBuildDate><atom:link href="https://biubiobiu.github.io/zh-cn/tags/request/index.xml" rel="self" type="application/rss+xml"/><item><title>argparse</title><link>https://biubiobiu.github.io/zh-cn/posts/00035_programming_language/0035_python/0050_sdk_lib/0090_argparse/</link><pubDate>Wed, 08 Dec 2021 16:00:20 +0800</pubDate><guid>https://biubiobiu.github.io/zh-cn/posts/00035_programming_language/0035_python/0050_sdk_lib/0090_argparse/</guid><description>一、argparse模块 import argparse # 创建ArgumentParser()解析对象 parser = argparse.ArgumentParser() # 使用add_argument()方法，添加参数 parser.add_argument(&amp;#39;--integer&amp;#39;, type=int, default=0, help=&amp;#39;displayas integer&amp;#39;) parser.add_argument(&amp;#39;--string&amp;#39;, type=str, default=&amp;#39;&amp;#39;, help=&amp;#39;displayas string&amp;#39;) args = parser.parse_args() add_argument 的参数：
name or flags - 选项字符串的名字或者列表，例如 foo 或者 -f, &amp;ndash;foo。 action - 命令行遇到参数时的动作，默认值是 store。 store_const，表示赋值为const； append，将遇到的值存储成列表，也就是如果参数重复则会保存多个值; append_const，将参数规范中定义的一个值保存到一个列表； count，存储遇到的次数；此外，也可以继承 argparse.Action 自定义参数解析； nargs - 应该读取的命令行参数个数，可以是具体的数字，或者是?号，当不指定值时对于 Positional argument 使用 default，对于 Optional argument 使用 const；或者是 * 号，表示 0 &amp;gt; 或多个参数；或者是 + 号表示 1 或多个参数。 const - action 和 nargs 所需要的常量值。 default - 不指定参数时的默认值。 type - 命令行参数应该被转换成的类型。 choices - 参数可允许的值的一个容器。 required - 可选参数是否可以省略 (仅针对可选参数)。 help - 参数的帮助信息，当指定为 argparse.</description></item><item><title>requests</title><link>https://biubiobiu.github.io/zh-cn/posts/00035_programming_language/0035_python/0050_sdk_lib/0070_request/</link><pubDate>Wed, 08 Dec 2021 16:00:20 +0800</pubDate><guid>https://biubiobiu.github.io/zh-cn/posts/00035_programming_language/0035_python/0050_sdk_lib/0070_request/</guid><description>一、request模块 requests模块：在python内置模块上进行了高度的封装，使得requests更方便。
url: uniform resource locator，统一资源定位符：互联网上标准资源的地址。
格式：
模式/协议，比如：https、http 服务器名称(或者IP地址)，比如：api.github.com 路径和文件名，比如：events requests.get(url) get请求 &amp;mdash; 不带参数 requests.get(url, params={&amp;ldquo;参数1&amp;rdquo;:&amp;ldquo;值1&amp;rdquo;}) get请求 &amp;mdash; 带参数 requests.get(url, headers=header, cookie=cookie) header = {&amp;ldquo;content-type&amp;rdquo;: &amp;ldquo;application/json&amp;rdquo;,&amp;ldquo;user-agent&amp;rdquo;: &amp;ldquo;&amp;quot;} 定制headers requests.get(url, proxies=proxies) proxies = {&amp;ldquo;http&amp;rdquo;: &amp;ldquo;ip1&amp;rdquo;, &amp;ldquo;https&amp;rdquo;: &amp;ldquo;ip2&amp;rdquo;} 代理 requests.post(url, data=json.dumps({&amp;quot;&amp;quot;:&amp;quot;&amp;quot;})) post请求 requests.</description></item></channel></rss>